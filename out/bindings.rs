/* automatically generated by rust-bindgen */

pub type wchar_t = ::std::os::raw::c_int;
pub type max_align_t = u128;
pub type nfdchar_t = ::std::os::raw::c_char;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct nfdpathset_t {
    pub buf: *mut nfdchar_t,
    pub indices: *mut usize,
    pub count: usize,
}
#[test]
fn bindgen_test_layout_nfdpathset_t() {
    assert_eq!(
        ::std::mem::size_of::<nfdpathset_t>(),
        24usize,
        concat!("Size of: ", stringify!(nfdpathset_t))
    );
    assert_eq!(
        ::std::mem::align_of::<nfdpathset_t>(),
        8usize,
        concat!("Alignment of ", stringify!(nfdpathset_t))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<nfdpathset_t>())).buf as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(nfdpathset_t),
            "::",
            stringify!(buf)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<nfdpathset_t>())).indices as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(nfdpathset_t),
            "::",
            stringify!(indices)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<nfdpathset_t>())).count as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(nfdpathset_t),
            "::",
            stringify!(count)
        )
    );
}
pub const nfdresult_t_NFD_ERROR: nfdresult_t = 0;
pub const nfdresult_t_NFD_OKAY: nfdresult_t = 1;
pub const nfdresult_t_NFD_CANCEL: nfdresult_t = 2;
pub type nfdresult_t = u32;
extern "C" {
    pub fn NFD_OpenDialog(
        filterList: *const nfdchar_t,
        defaultPath: *const nfdchar_t,
        outPath: *mut *mut nfdchar_t,
    ) -> nfdresult_t;
}
extern "C" {
    pub fn NFD_OpenDialogMultiple(
        filterList: *const nfdchar_t,
        defaultPath: *const nfdchar_t,
        outPaths: *mut nfdpathset_t,
    ) -> nfdresult_t;
}
extern "C" {
    pub fn NFD_SaveDialog(
        filterList: *const nfdchar_t,
        defaultPath: *const nfdchar_t,
        outPath: *mut *mut nfdchar_t,
    ) -> nfdresult_t;
}
extern "C" {
    pub fn NFD_PickFolder(
        defaultPath: *const nfdchar_t,
        outPath: *mut *mut nfdchar_t,
    ) -> nfdresult_t;
}
extern "C" {
    pub fn NFD_GetError() -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn NFD_PathSet_GetCount(pathSet: *const nfdpathset_t) -> usize;
}
extern "C" {
    pub fn NFD_PathSet_GetPath(pathSet: *const nfdpathset_t, index: usize) -> *mut nfdchar_t;
}
extern "C" {
    pub fn NFD_PathSet_Free(pathSet: *mut nfdpathset_t);
}
